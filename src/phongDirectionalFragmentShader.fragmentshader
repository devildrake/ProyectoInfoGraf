#version 330 core
// Ouput data
out vec4 color;
in vec4 normal;
in vec4 position;
uniform float iluminacionAmbiental;
uniform vec3 incidenciaLuz;
uniform float intensidadFuenteDifusa;
uniform float coeficienteDifuso;
uniform float intensidadFuenteEspecular;
uniform float coeficienteEspecular;
uniform float rugosidad;
uniform vec3 camPos;
uniform vec3 focusPosition;

void main(){
vec4 iluminacionDifusa;
vec4 iluminacionEspecular;
vec4 colorOriginal = vec4(1,0,0,1);

vec4 iluminacionAmbientalL = colorOriginal*iluminacionAmbiental;

vec3 incidenciaLuzNorm = normalize(-incidenciaLuz);

    float diff = max(dot(normalize(normal.xyz), incidenciaLuzNorm), 0.0);

    vec3 reflectDir = reflect(-incidenciaLuzNorm, normalize(normal.xyz));
	vec3 directionToViewPoint = camPos - focusPosition;
	
	
    float spec = pow(max(dot(camPos, reflectDir), 0.0), rugosidad);

    vec3 diffuse  = coeficienteDifuso * intensidadFuenteDifusa * diff * colorOriginal.xyz;
	
    vec3 specular = coeficienteEspecular * intensidadFuenteEspecular * spec * colorOriginal.xyz;
	
color = (iluminacionAmbientalL + diffuse + specular );
}